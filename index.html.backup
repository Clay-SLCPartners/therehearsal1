<div class="scenario-card" data-scenario="going-to-doctor" tabindex="0" role="button" aria-describedby="doctor-desc">
                            <div class="scenario-icon">🩺</div>
                            <h3>Going to the Doctor</h3>
                            <p id="doctor-desc">Practice advocating for your mental health with a healthcare provider who might not take your concerns seriously.</p>
                            <div class="scenario-difficulty">
                                <span class="difficulty-label">Difficulty:</span>
                                <span class="difficulty-level intermediate">Intermediate</span>
                            </div>
                        </div>

                        <div class="scenario-card" data-scenario="tough-work-conversation" tabindex="0" role="button" aria-describedby="work-conversation-desc">
                            <div class="scenario-icon">💼</div>
                            <h3>Tough Conversation at Work</h3>
                            <p id="work-conversation-desc">Navigate a difficult workplace discussion about requesting mental health accommodations with your manager.</p>
                            <div class="scenario-difficulty">
                                <span class="difficulty-label">Difficulty:</span>
                                <span class="difficulty-level intermediate">Intermediate</span>
                            </div>
                        </div>

                        <div class="scenario-card" data-scenario="asking-someone-out" tabindex="0" role="button" aria-describedby="dating-desc">
                            <div class="scenario-icon">💕</div>
                            <h3>Asking Someone Out</h3>
                            <p id="dating-desc">Practice handling vulnerability and potential rejection while asking someone you're interested in on a date.</p>
                            <div class="scenario-difficulty">
                                <span class="difficulty-label">Difficulty:</span>
                                <span class="difficulty-level beginner">Beginner</span>
                            </div>
                        </div><!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Practice difficult conversations about mental health in America. A safe space to rehearse and prepare for real-world mental health discussions.">
    <meta name="keywords" content="mental health, conversation practice, therapy, crisis support, The Rehearsal, America, healthcare">
    <meta name="author" content="The Rehearsal AI">
    
    <!-- Open Graph / Social Media -->
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://therehearsal.ai/">
    <meta property="og:title" content="The Rehearsal AI - Mental Health Conversation Practice">
    <meta property="og:description" content="Addressing America's mental healthcare crisis through conversation practice and awareness">
    <meta property="og:image" content="https://therehearsal.ai/images/og-image.png">
    
    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
    <link rel="apple-touch-icon" sizes="180x180" href="/images/icons/apple-touch-icon.png">
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    
    <title>The Rehearsal AI - Mental Health Conversation Practice</title>
    
    <style>
        :root {
            /* HBO Max Color Scheme */
            --hbo-primary: #1C1C1E;
            --hbo-secondary: #2D1B69;
            --hbo-accent: #5C2D91;
            --hbo-purple: #8B5CF6;
            --hbo-bright-purple: #A855F7;
            --hbo-dark-purple: #1F1B2E;
            --hbo-gradient: linear-gradient(135deg, #2D1B69 0%, #5C2D91 50%, #8B5CF6 100%);
            --hbo-gradient-reverse: linear-gradient(135deg, #8B5CF6 0%, #5C2D91 50%, #2D1B69 100%);
            
            /* Text Colors */
            --text-primary: #FFFFFF;
            --text-secondary: #B8B8B8;
            --text-muted: #7A7A7A;
            --text-accent: #F3F4F6;
            
            /* Background Colors */
            --bg-primary: #000000;
            --bg-secondary: #1C1C1E;
            --bg-card: #2A2A2E;
            --bg-overlay: rgba(28, 28, 30, 0.95);
            
            /* Border and Effects */
            --border-primary: #3A3A3E;
            --border-accent: #5C2D91;
            --shadow-primary: 0 4px 20px rgba(139, 92, 246, 0.15);
            --shadow-secondary: 0 8px 40px rgba(45, 27, 105, 0.3);
            --shadow-intense: 0 20px 60px rgba(139, 92, 246, 0.4);
            
            /* Alert Colors */
            --crisis-red: #8B5CF6;
            --success-green: #10B981;
            --warning-yellow: #F59E0B;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: var(--bg-primary);
            color: var(--text-primary);
            line-height: 1.6;
            overflow-x: hidden;
        }

        /* Header */
        .header {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            background: var(--bg-overlay);
            backdrop-filter: blur(20px);
            border-bottom: 1px solid var(--border-primary);
            z-index: 1000;
            transition: all 0.3s ease;
        }

        .nav-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            height: 80px;
        }

        .logo {
            font-size: 1.75rem;
            font-weight: 800;
            background: var(--hbo-gradient);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            text-decoration: none;
            letter-spacing: -0.02em;
        }

        .nav-links {
            display: flex;
            list-style: none;
            gap: 2.5rem;
            align-items: center;
        }

        .nav-links a {
            color: var(--text-secondary);
            text-decoration: none;
            font-weight: 500;
            font-size: 0.95rem;
            transition: all 0.3s ease;
            position: relative;
        }

        .nav-links a:hover {
            color: var(--hbo-bright-purple);
        }

        .nav-links a::after {
            content: '';
            position: absolute;
            bottom: -8px;
            left: 0;
            width: 0;
            height: 2px;
            background: var(--hbo-gradient);
            transition: width 0.3s ease;
        }

        .nav-links a:hover::after {
            width: 100%;
        }

        .cta-button {
            background: var(--hbo-gradient);
            color: var(--text-primary);
            padding: 12px 28px;
            border: none;
            border-radius: 12px;
            font-weight: 600;
            font-size: 0.95rem;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            box-shadow: var(--shadow-primary);
        }

        .cta-button:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-secondary);
        }

        /* Crisis Banner */
        .crisis-banner {
            background: var(--hbo-gradient);
            color: white;
            padding: 1rem;
            text-align: center;
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            z-index: 1000;
            transform: translateY(100%);
            transition: transform 0.4s ease;
            box-shadow: 0 -4px 20px rgba(139, 92, 246, 0.3);
        }

        .crisis-banner.show {
            transform: translateY(0);
        }

        .crisis-banner strong {
            margin-right: 1rem;
            font-weight: 700;
        }

        .crisis-link {
            color: white;
            font-weight: 600;
            text-decoration: underline;
            margin: 0 1rem;
        }

        .close-btn {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: white;
            font-size: 1.5rem;
            cursor: pointer;
            font-weight: bold;
        }

        /* Hero Section */
        .hero {
            min-height: 100vh;
            display: flex;
            align-items: center;
            background: var(--bg-primary);
            position: relative;
            overflow: hidden;
        }

        .hero::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: var(--hbo-gradient);
            opacity: 0.1;
            z-index: 1;
        }

        .hero-content {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 2rem;
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 4rem;
            align-items: center;
            position: relative;
            z-index: 2;
        }

        .hero-text h1 {
            font-size: 4rem;
            font-weight: 800;
            line-height: 1.1;
            margin-bottom: 2rem;
            background: var(--hbo-gradient);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            letter-spacing: -0.02em;
        }

        .hero-subtitle {
            font-size: 1.5rem;
            color: var(--text-secondary);
            margin-bottom: 1rem;
            font-weight: 500;
        }

        .hero-description {
            font-size: 1.125rem;
            color: var(--text-muted);
            margin-bottom: 3rem;
            line-height: 1.7;
        }

        .america-stats {
            background: var(--bg-card);
            border: 1px solid var(--border-accent);
            border-radius: 16px;
            padding: 2rem;
            margin-bottom: 3rem;
            box-shadow: var(--shadow-primary);
        }

        .america-stats h3 {
            color: var(--hbo-bright-purple);
            font-size: 1.25rem;
            font-weight: 700;
            margin-bottom: 1rem;
        }

        .stat-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1.5rem;
        }

        .stat-item {
            text-align: center;
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: 800;
            color: var(--hbo-bright-purple);
            display: block;
        }

        .stat-label {
            font-size: 0.9rem;
            color: var(--text-secondary);
            margin-top: 0.5rem;
        }

        .hero-buttons {
            display: flex;
            gap: 1.5rem;
            flex-wrap: wrap;
        }

        .btn-primary {
            background: var(--hbo-gradient);
            color: var(--text-primary);
            padding: 16px 32px;
            border: none;
            border-radius: 12px;
            font-weight: 700;
            font-size: 1.1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
            box-shadow: var(--shadow-primary);
        }

        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow-intense);
        }

        .btn-secondary {
            background: transparent;
            color: var(--hbo-bright-purple);
            padding: 16px 32px;
            border: 2px solid var(--hbo-bright-purple);
            border-radius: 12px;
            font-weight: 700;
            font-size: 1.1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
        }

        .btn-secondary:hover {
            background: var(--hbo-bright-purple);
            color: var(--bg-primary);
            transform: translateY(-3px);
        }

        /* Hero Visual */
        .hero-visual {
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
        }

        .hero-illustration {
            width: 100%;
            max-width: 500px;
            height: 500px;
            background: var(--bg-card);
            border: 2px solid var(--border-accent);
            border-radius: 24px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            position: relative;
            overflow: hidden;
            box-shadow: var(--shadow-secondary);
        }

        .hero-illustration::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: var(--hbo-gradient);
            opacity: 0.1;
            z-index: 1;
        }

        .illustration-content {
            position: relative;
            z-index: 2;
            text-align: center;
        }

        .main-icon {
            font-size: 6rem;
            margin-bottom: 1rem;
            animation: float 3s ease-in-out infinite;
        }

        .floating-elements {
            display: flex;
            gap: 2rem;
            margin-top: 2rem;
        }

        .floating-elements span {
            font-size: 2rem;
            opacity: 0.7;
            animation: float 3s ease-in-out infinite;
        }

        .floating-elements span:nth-child(2) {
            animation-delay: 1s;
        }

        .floating-elements span:nth-child(3) {
            animation-delay: 2s;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
        }

        /* Problem Statement Section */
        .problem-section {
            padding: 6rem 0;
            background: var(--bg-secondary);
            position: relative;
        }

        .section-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 2rem;
        }

        .section-header {
            text-align: center;
            margin-bottom: 4rem;
        }

        .section-header h2 {
            font-size: 3rem;
            font-weight: 800;
            margin-bottom: 1.5rem;
            background: var(--hbo-gradient);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .section-header p {
            font-size: 1.25rem;
            color: var(--text-secondary);
            max-width: 800px;
            margin: 0 auto;
            line-height: 1.7;
        }

        .problem-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 2rem;
            margin-bottom: 4rem;
        }

        .problem-card {
            background: var(--bg-card);
            border: 1px solid var(--border-primary);
            border-radius: 20px;
            padding: 2.5rem;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .problem-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: var(--hbo-gradient);
        }

        .problem-card:hover {
            transform: translateY(-8px);
            box-shadow: var(--shadow-secondary);
            border-color: var(--border-accent);
        }

        .problem-icon {
            font-size: 3rem;
            margin-bottom: 1.5rem;
            display: block;
        }

        .problem-card h3 {
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 1rem;
            color: var(--hbo-bright-purple);
        }

        .problem-card p {
            color: var(--text-secondary);
            line-height: 1.6;
            margin-bottom: 1rem;
        }

        .problem-stat {
            font-size: 2rem;
            font-weight: 800;
            color: var(--hbo-bright-purple);
            margin-top: 1rem;
        }

        /* Rehearsal Section */
        .rehearsal-section {
            padding: 6rem 0;
            background: var(--bg-primary);
            min-height: 100vh;
        }

        .scenario-selection {
            margin-bottom: 4rem;
        }

        .scenarios-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 2rem;
            margin-bottom: 3rem;
        }

        .scenario-card {
            background: var(--bg-card);
            border: 2px solid var(--border-primary);
            border-radius: 20px;
            padding: 2.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .scenario-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: var(--hbo-gradient);
            transform: scaleX(0);
            transition: transform 0.3s ease;
        }

        .scenario-card:hover::before,
        .scenario-card.selected::before {
            transform: scaleX(1);
        }

        .scenario-card:hover {
            transform: translateY(-8px);
            box-shadow: var(--shadow-secondary);
            border-color: var(--hbo-bright-purple);
        }

        .scenario-card.selected {
            border-color: var(--hbo-bright-purple);
            background: rgba(139, 92, 246, 0.1);
            transform: translateY(-4px);
            box-shadow: var(--shadow-primary);
        }

        .scenario-card:focus {
            outline: 2px solid var(--hbo-bright-purple);
            outline-offset: 2px;
        }

        .scenario-icon {
            font-size: 3rem;
            margin-bottom: 1.5rem;
            display: block;
        }

        .scenario-card h3 {
            color: var(--hbo-bright-purple);
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 1rem;
        }

        .scenario-card p {
            color: var(--text-secondary);
            line-height: 1.6;
            margin-bottom: 1.5rem;
        }

        .scenario-difficulty {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .difficulty-label {
            color: var(--text-muted);
            font-size: 0.9rem;
        }

        .difficulty-level {
            padding: 0.25rem 0.75rem;
            border-radius: 12px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .difficulty-level.beginner {
            background: rgba(16, 185, 129, 0.2);
            color: var(--success-green);
        }

        .difficulty-level.intermediate {
            background: rgba(245, 158, 11, 0.2);
            color: var(--warning-yellow);
        }

        .difficulty-level.advanced {
            background: rgba(239, 68, 68, 0.2);
            color: var(--crisis-red);
        }

        /* Conversation Interface */
        .conversation-interface {
            background: var(--bg-card);
            border: 2px solid var(--border-accent);
            border-radius: 24px;
            padding: 2rem;
            box-shadow: var(--shadow-secondary);
        }

        .conversation-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 2rem;
            padding-bottom: 1.5rem;
            border-bottom: 1px solid var(--border-primary);
        }

        .scenario-info h3 {
            color: var(--hbo-bright-purple);
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        .scenario-info p {
            color: var(--text-secondary);
            max-width: 500px;
            margin-bottom: 1rem;
        }

        /* Progress Bar */
        .progress-bar {
            background: var(--bg-secondary);
            border-radius: 20px;
            height: 8px;
            position: relative;
            overflow: hidden;
            margin-top: 1rem;
        }

        .progress-fill {
            background: var(--hbo-gradient);
            height: 100%;
            border-radius: 20px;
            transition: width 0.5s ease;
            width: 0%;
        }

        .progress-text {
            position: absolute;
            top: -25px;
            right: 0;
            font-size: 0.8rem;
            color: var(--text-muted);
            font-weight: 500;
        }

        .conversation-controls {
            display: flex;
            gap: 0.75rem;
            flex-wrap: wrap;
        }

        .btn-small {
            padding: 8px 16px;
            font-size: 0.9rem;
            border-radius: 8px;
        }

        /* Story Container */
        .story-container {
            margin-bottom: 2rem;
        }

        .story-text {
            background: var(--bg-secondary);
            border-radius: 16px;
            padding: 2rem;
            margin-bottom: 2rem;
            border-left: 4px solid var(--hbo-bright-purple);
            font-size: 1.1rem;
            line-height: 1.7;
            color: var(--text-primary);
        }

        .story-text.typing {
            position: relative;
        }

        .story-text.typing::after {
            content: '|';
            color: var(--hbo-bright-purple);
            animation: blink 1s infinite;
        }

        @keyframes blink {
            0%, 50% { opacity: 1; }
            51%, 100% { opacity: 0; }
        }

        /* Character Dialogue */
        .character-dialogue {
            background: var(--bg-primary);
            border: 2px solid var(--border-primary);
            border-radius: 20px;
            padding: 1.5rem;
            margin-bottom: 2rem;
        }

        .character-info {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .character-avatar {
            width: 50px;
            height: 50px;
            background: var(--hbo-gradient);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
        }

        .character-details h4 {
            color: var(--hbo-bright-purple);
            margin: 0;
            font-size: 1.1rem;
        }

        .character-details p {
            color: var(--text-muted);
            margin: 0;
            font-size: 0.9rem;
            font-style: italic;
        }

        .dialogue-text {
            background: rgba(139, 92, 246, 0.1);
            border-radius: 12px;
            padding: 1.5rem;
            color: var(--text-primary);
            font-size: 1.05rem;
            line-height: 1.6;
            position: relative;
        }

        .dialogue-text::before {
            content: '"';
            position: absolute;
            top: -10px;
            left: 10px;
            font-size: 3rem;
            color: var(--hbo-bright-purple);
            opacity: 0.3;
        }

        /* Choice Container */
        .choice-container {
            margin-bottom: 2rem;
        }

        .choice-container h4 {
            color: var(--hbo-bright-purple);
            margin-bottom: 1.5rem;
            font-size: 1.2rem;
            text-align: center;
        }

        .choices {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .choice-button {
            background: var(--bg-secondary);
            border: 2px solid var(--border-primary);
            border-radius: 12px;
            padding: 1.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: left;
            color: var(--text-primary);
            font-size: 1rem;
            position: relative;
            overflow: hidden;
        }

        .choice-button::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: var(--hbo-gradient);
            opacity: 0.1;
            transition: left 0.3s ease;
        }

        .choice-button:hover::before {
            left: 0;
        }

        .choice-button:hover {
            border-color: var(--hbo-bright-purple);
            transform: translateX(8px);
        }

        .choice-button:focus {
            outline: 2px solid var(--hbo-bright-purple);
            outline-offset: 2px;
        }

        .choice-header {
            font-weight: 600;
            color: var(--hbo-bright-purple);
            margin-bottom: 0.5rem;
        }

        .choice-description {
            color: var(--text-secondary);
            font-size: 0.9rem;
            line-height: 1.4;
        }

        .choice-impact {
            display: flex;
            gap: 1rem;
            margin-top: 0.75rem;
            font-size: 0.8rem;
        }

        .impact-item {
            display: flex;
            align-items: center;
            gap: 0.25rem;
        }

        .impact-positive {
            color: var(--success-green);
        }

        .impact-negative {
            color: var(--crisis-red);
        }

        .impact-neutral {
            color: var(--warning-yellow);
        }

        /* Text Input Container */
        .text-input-container {
            margin-bottom: 2rem;
        }

        .text-input-container h4 {
            color: var(--hbo-bright-purple);
            margin-bottom: 1rem;
            font-size: 1.2rem;
            text-align: center;
        }

        .text-input-box {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .text-input-box textarea {
            background: var(--bg-secondary);
            border: 2px solid var(--border-primary);
            border-radius: 12px;
            padding: 1rem;
            color: var(--text-primary);
            font-size: 1rem;
            font-family: inherit;
            resize: vertical;
            min-height: 80px;
            transition: border-color 0.3s ease;
        }

        .text-input-box textarea:focus {
            border-color: var(--hbo-bright-purple);
            outline: none;
        }

        .text-input-box textarea::placeholder {
            color: var(--text-muted);
        }

        /* Scenario Stats */
        .scenario-stats {
            background: rgba(139, 92, 246, 0.05);
            border: 1px solid var(--hbo-bright-purple);
            border-radius: 16px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 2rem;
        }

        .stat-item {
            text-align: center;
        }

        .stat-label {
            display: block;
            color: var(--text-secondary);
            font-size: 0.9rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .stat-bar {
            background: var(--bg-secondary);
            border-radius: 10px;
            height: 8px;
            margin-bottom: 0.5rem;
            overflow: hidden;
        }

        .stat-fill {
            height: 100%;
            border-radius: 10px;
            transition: width 0.5s ease;
            width: 0%;
        }

        .stat-fill.empathy {
            background: linear-gradient(90deg, #10B981, #34D399);
        }

        .stat-fill.trust {
            background: linear-gradient(90deg, #3B82F6, #60A5FA);
        }

        .stat-fill.effectiveness {
            background: linear-gradient(90deg, #8B5CF6, #A78BFA);
        }

        .stat-value {
            color: var(--hbo-bright-purple);
            font-weight: 700;
            font-size: 0.9rem;
        }

        /* Conversation Tips */
        .conversation-tips {
            background: rgba(139, 92, 246, 0.05);
            border: 1px solid var(--hbo-bright-purple);
            border-radius: 16px;
            padding: 1.5rem;
        }

        .conversation-tips h4 {
            color: var(--hbo-bright-purple);
            font-size: 1.1rem;
            margin-bottom: 1rem;
        }

        .conversation-tips p {
            color: var(--text-secondary);
            margin: 0;
            line-height: 1.5;
        }

        .conversation-tips ul {
            list-style: none;
            margin: 0;
        }

        .conversation-tips li {
            color: var(--text-secondary);
            margin-bottom: 0.5rem;
            padding-left: 1.5rem;
            position: relative;
        }

        .conversation-tips li::before {
            content: '•';
            color: var(--hbo-bright-purple);
            font-weight: bold;
            position: absolute;
            left: 0;
        }

        /* Animation Classes */
        .fade-in {
            animation: fadeIn 0.6s ease-out;
        }

        .slide-in {
            animation: slideIn 0.5s ease-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes slideIn {
            from { opacity: 0; transform: translateX(-20px); }
            to { opacity: 1; transform: translateX(0); }
        }

        /* Success/Failure States */
        .outcome-success {
            background: rgba(16, 185, 129, 0.1);
            border-color: var(--success-green);
        }

        .outcome-warning {
            background: rgba(245, 158, 11, 0.1);
            border-color: var(--warning-yellow);
        }

        .outcome-failure {
            background: rgba(239, 68, 68, 0.1);
            border-color: var(--crisis-red);
        }

        /* Crisis Modal */
        .crisis-modal, .feedback-modal {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 2000;
            backdrop-filter: blur(10px);
        }

        .crisis-modal-content, .feedback-modal-content {
            background: var(--bg-card);
            border: 2px solid var(--border-accent);
            border-radius: 20px;
            padding: 0;
            max-width: 500px;
            width: 90%;
            max-height: 80vh;
            overflow-y: auto;
            box-shadow: var(--shadow-intense);
        }

        .crisis-header, .feedback-header {
            background: var(--hbo-gradient);
            color: white;
            padding: 1.5rem 2rem;
            border-radius: 18px 18px 0 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .crisis-header h3, .feedback-header h3 {
            margin: 0;
            font-size: 1.25rem;
        }

        .crisis-body, .feedback-body {
            padding: 2rem;
        }

        .crisis-contacts {
            margin-top: 1.5rem;
        }

        .crisis-contact {
            background: var(--bg-secondary);
            border: 1px solid var(--border-primary);
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 1rem;
        }

        .crisis-contact strong {
            color: var(--hbo-bright-purple);
            display: block;
            margin-bottom: 0.5rem;
        }

        .crisis-phone {
            color: var(--text-primary);
            font-size: 1.2rem;
            font-weight: 700;
            text-decoration: none;
            display: block;
            margin-bottom: 0.5rem;
        }

        .crisis-phone:hover {
            color: var(--hbo-bright-purple);
        }

        .crisis-contact p {
            color: var(--text-secondary);
            margin: 0;
            font-size: 0.9rem;
        }

        /* Feedback Modal Specific */
        .feedback-score {
            background: var(--hbo-gradient);
            color: white;
            padding: 1rem;
            border-radius: 12px;
            text-align: center;
            margin-bottom: 1.5rem;
        }

        .feedback-score h4 {
            margin: 0 0 0.5rem 0;
        }

        .feedback-areas {
            margin-bottom: 1.5rem;
        }

        .feedback-area {
            margin-bottom: 1rem;
        }

        .feedback-area h5 {
            color: var(--hbo-bright-purple);
            margin-bottom: 0.5rem;
        }

        .feedback-actions {
            padding: 1.5rem 2rem;
            border-top: 1px solid var(--border-primary);
            display: flex;
            gap: 1rem;
            justify-content: center;
        }

        /* Solution Section */
        .solution-section {
            padding: 6rem 0;
            background: var(--bg-primary);
        }

        .solution-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 4rem;
            align-items: center;
        }

        .solution-text h2 {
            font-size: 2.5rem;
            font-weight: 800;
            margin-bottom: 2rem;
            background: var(--hbo-gradient);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .solution-features {
            list-style: none;
            margin: 2rem 0;
        }

        .solution-features li {
            display: flex;
            align-items: center;
            margin-bottom: 1rem;
            font-size: 1.1rem;
            color: var(--text-secondary);
        }

        .solution-features li::before {
            content: '✓';
            color: var(--success-green);
            font-weight: bold;
            font-size: 1.2rem;
            margin-right: 1rem;
            width: 20px;
        }

        .solution-visual {
            background: var(--bg-card);
            border: 2px solid var(--border-accent);
            border-radius: 20px;
            padding: 3rem;
            text-align: center;
            box-shadow: var(--shadow-primary);
        }

        .solution-visual h3 {
            color: var(--hbo-bright-purple);
            font-size: 1.5rem;
            margin-bottom: 2rem;
        }

        .practice-flow {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        .flow-step {
            background: var(--bg-secondary);
            border-radius: 12px;
            padding: 1.5rem;
            border-left: 4px solid var(--hbo-bright-purple);
        }

        .flow-step h4 {
            color: var(--text-primary);
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .flow-step p {
            color: var(--text-muted);
            font-size: 0.9rem;
        }

        /* CTA Section */
        .cta-section {
            padding: 6rem 0;
            background: var(--hbo-gradient);
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .cta-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><polygon fill="%23ffffff05" points="0,1000 1000,0 1000,1000"/></svg>');
            z-index: 1;
        }

        .cta-content {
            position: relative;
            z-index: 2;
        }

        .cta-section h2 {
            font-size: 3rem;
            font-weight: 800;
            color: white;
            margin-bottom: 1.5rem;
        }

        .cta-section p {
            font-size: 1.25rem;
            color: rgba(255, 255, 255, 0.9);
            margin-bottom: 3rem;
            max-width: 600px;
            margin-left: auto;
            margin-right: auto;
        }

        .cta-buttons {
            display: flex;
            gap: 2rem;
            justify-content: center;
            flex-wrap: wrap;
        }

        .btn-cta-primary {
            background: white;
            color: var(--hbo-secondary);
            padding: 18px 36px;
            border: none;
            border-radius: 12px;
            font-weight: 700;
            font-size: 1.1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.3);
        }

        .btn-cta-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);
        }

        .btn-cta-secondary {
            background: transparent;
            color: white;
            padding: 18px 36px;
            border: 2px solid white;
            border-radius: 12px;
            font-weight: 700;
            font-size: 1.1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
        }

        .btn-cta-secondary:hover {
            background: white;
            color: var(--hbo-secondary);
        }

        /* Footer */
        .footer {
            background: var(--bg-secondary);
            color: var(--text-secondary);
            padding: 3rem 0 2rem;
            border-top: 1px solid var(--border-primary);
        }

        .footer-content {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 2rem;
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 3rem;
        }

        .footer-section h4 {
            color: var(--hbo-bright-purple);
            font-size: 1.25rem;
            font-weight: 700;
            margin-bottom: 1.5rem;
        }

        .footer-section ul {
            list-style: none;
        }

        .footer-section ul li {
            margin-bottom: 0.75rem;
        }

        .footer-section ul li a {
            color: var(--text-muted);
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .footer-section ul li a:hover {
            color: var(--hbo-bright-purple);
        }

        .footer-bottom {
            border-top: 1px solid var(--border-primary);
            margin-top: 3rem;
            padding-top: 2rem;
            text-align: center;
            color: var(--text-muted);
        }

        /* Mobile Menu */
        .mobile-menu-toggle {
            display: none;
            flex-direction: column;
            cursor: pointer;
            padding: 0.5rem;
        }

        .mobile-menu-toggle span {
            width: 25px;
            height: 3px;
            background: var(--text-primary);
            margin: 3px 0;
            transition: 0.3s;
            border-radius: 2px;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .nav-links {
                display: none;
            }

                character: {
                    name: 'Dr. Martinez',
                    avatar: '👩‍⚕️',
                    initialMood: 'professional but busy'
                },
                scenes: [
                    {
                        id: 'intro',
                        text: "You're sitting in the sterile doctor's office. Dr. Martinez enters with a tablet, glancing at it while sitting down. She looks at you expectantly.",
                        character: {
                            dialogue: "So, what brings you in today? I see here you're requesting a mental health consultation.",
                            mood: "professional but slightly rushed"
                        },
                        choices: [
                            {
                                text: "I've been dealing with anxiety and depression that's affecting my daily life.",
                                description: "Direct and clear about your symptoms",
                                impact: { effectiveness: +2, trust: +1 },
                                next: 'direct_symptoms'
                            },
                            {
                                text: "I haven't been feeling like myself lately and thought I should get checked out.",
                                description: "Vague description - might not convey severity",
                                impact: { effectiveness: -1 },
                                next: 'vague_symptoms'
                            },
                            {
                                text: "I've been having panic attacks and can't sleep. It's been going on for months.",
                                description: "Specific symptoms with timeline",
                                impact: { effectiveness: +3, trust: +2 },
                                next: 'specific_symptoms'
                            }
                        ]
                    },
                    {
                        id: 'direct_symptoms',
                        text: "Dr. Martinez nods and makes a note on her tablet. She seems to be taking you seriously, but you can tell she's evaluating whether this is 'real' or not.",
                        character: {
                            dialogue: "How long have you been experiencing these symptoms? Are you able to function normally at work and home?",
                            mood: "more attentive, taking notes"
                        },
                        choices: [
                            {
                                text: "About 6 months. I'm functioning but it takes all my energy just to get through basic tasks.",
                                description: "Honest about duration and impact",
                                impact: { effectiveness: +2, trust: +2 },
                                next: 'honest_impact'
                            },
                            {
                                text: "It comes and goes. Some days are fine, others are really hard.",
                                description: "Accurate but might minimize severity",
                                impact: { effectiveness: +1 },
                                next: 'minimizing_impact'
                            },
                            {
                                text: "I'm barely holding it together. I've called in sick three times this month.",
                                description: "Very direct about severity",
                                impact: { effectiveness: +3, trust: +1 },
                                next: 'severe_impact'
                            }
                        ]
                    },
                    {
                        id: 'severe_impact',
                        text: "Dr. Martinez looks up from her tablet with genuine concern. Your honesty about the severity has clearly gotten her attention.",
                        character: {
                            dialogue: "That sounds very difficult. I'm glad you came in. Let's talk about treatment options and I can refer you to a mental health specialist.",
                            mood: "concerned and helpful"
                        },
                        isEnding: true,
                        outcome: 'success'
                    },
                    {
                        id: 'vague_symptoms',
                        text: "Dr. Martinez nods politely but doesn't seem overly concerned. You realize you need to be more specific about what you're experiencing.",
                        character: {
                            dialogue: "Can you be more specific about what 'not feeling like yourself' means? Are you experiencing any particular symptoms?",
                            mood: "slightly dismissive, needs more information"
                        },
                        choices: [
                            {
                                text: "I'm having panic attacks, insomnia, and can't concentrate at work. It's been affecting everything.",
                                description: "Provides specific, concrete symptoms",
                                impact: { effectiveness: +3, trust: +2 },
                                next: 'specific_followup'
                            },
                            {
                                text: "I just feel sad and anxious a lot. Sometimes I can't get out of bed.",
                                description: "More specific but still somewhat general",
                                impact: { effectiveness: +1, trust: +1 },
                                next: 'general_symptoms'
                            },
                            {
                                text: "It's hard to explain. I just don't feel right.",
                                description: "Still vague - might not be taken seriously",
                                impact: { effectiveness: -1 },
                                next: 'continued_vague'
                            }
                        ]
                    },
                    {
                        id: 'specific_followup',
                        text: "Now Dr. Martinez is paying much closer attention. She puts down her tablet and makes eye contact.",
                        character: {
                            dialogue: "Those are significant symptoms. How long have you been experiencing panic attacks? Have you had any thoughts of self-harm?",
                            mood: "professional and concerned, taking detailed notes"
                        },
                        input_type: 'text',
                        prompt: "Dr. Martinez is now taking you seriously and asking important questions. How do you respond honestly about your mental health?",
                        next: 'doctor_success'
                    },
                    {
                        id: 'doctor_success',
                        text: "Based on your honest communication about your symptoms, Dr. Martinez has a clear understanding of your situation.",
                        isEnding: true,
                        outcome: 'success'
                    }
                ]
            },
            'tough-work-conversation': {
                title: 'Tough Conversation at Work',
                description: "You need to have a difficult conversation with your manager about requesting mental health accommodations while maintaining your professional reputation.",
                difficulty: 'intermediate',
                character: {
                    name: 'Sarah (Manager)',
                    avatar: '👩‍💼',
                    initialMood: 'business-focused'
                },
                scenes: [
                    {
                        id: 'intro',
                        text: "You've scheduled a private meeting with your manager Sarah. She's known for being results-driven and has seemed frustrated with some missed deadlines lately. You need to address your mental health struggles professionally.",
                        character: {
                            dialogue: "Thanks for scheduling this meeting. I wanted to discuss your recent performance. You seem distracted lately and missed a few deadlines. What's going on?",
                            mood: "concerned but slightly critical"
                        },
                        choices: [
                            {
                                text: "I appreciate you bringing this up. I've been dealing with some mental health challenges that are affecting my work, and I'd like to discuss potential accommodations.",
                                description: "Direct, professional, and solution-focused",
                                impact: { trust: +3, effectiveness: +3 },
                                next: 'professional_disclosure'
                            },
                            {
                                text: "I'm sorry about the missed deadlines. I've been overwhelmed with the workload and could use some support.",
                                description: "Focuses on workload rather than personal struggles",
                                impact: { effectiveness: +1 },
                                next: 'workload_focus'
                            },
                            {
                                text: "You're right, I haven't been at my best. I'm going through some personal stuff that's been really difficult.",
                                description: "Honest but vague about specifics",
                                impact: { trust: +1, empathy: +1 },
                                next: 'vague_personal'
                            }
                        ]
                    },
                    {
                        id: 'professional_disclosure',
                        text: "Sarah's expression shifts from critical to concerned. She sets down her pen and gives you her full attention.",
                        character: {
                            dialogue: "I appreciate you being upfront about this. Mental health is important, and I want to support you. What kind of accommodations would be helpful?",
                            mood: "supportive and engaged"
                        },
                        choices: [
                            {
                                text: "I'd benefit from a more flexible schedule and the option to work from home on particularly difficult days. I'm also working with a therapist.",
                                description: "Specific requests with professional context",
                                impact: { effectiveness: +3, trust: +2 },
                                next: 'specific_accommodations'
                            },
                            {
                                text: "Maybe we could adjust some deadlines when I'm having a rough patch? I'm still committed to doing good work.",
                                description: "Reasonable request with reassurance",
                                impact: { effectiveness: +2, trust: +1 },
                                next: 'deadline_flexibility'
                            },
                            {
                                text: "I'm not sure exactly what would help yet. I'm still figuring this out with my healthcare provider.",
                                description: "Honest about uncertainty",
                                impact: { trust: +2, effectiveness: +1 },
                                next: 'uncertain_needs'
                            }
                        ]
                    },
                    {
                        id: 'specific_accommodations',
                        text: "Sarah nods thoughtfully and makes some notes. You can see she's taking this seriously and wants to find a solution that works for everyone.",
                        character: {
                            dialogue: "Those sound like reasonable accommodations. Let me talk to HR about formalizing this. How can I better support you day-to-day?",
                            mood: "collaborative and solution-focused"
                        },
                        input_type: 'text',
                        prompt: "Sarah is being very supportive. How do you respond to show appreciation while maintaining professionalism?",
                        next: 'positive_resolution'
                    },
                    {
                        id: 'workload_focus',
                        text: "Sarah seems somewhat understanding but doesn't fully grasp the personal nature of your struggles.",
                        character: {
                            dialogue: "I understand the workload has been heavy. We can look at redistributing some tasks, but I need to know you're committed to improving your performance.",
                            mood: "business-focused, missing the deeper issue"
                        },
                        choices: [
                            {
                                text: "I am committed, but I should be more transparent - I'm dealing with depression and anxiety that's affecting my ability to work.",
                                description: "Decides to be more direct about mental health",
                                impact: { trust: +2, effectiveness: +2 },
                                next: 'belated_honesty'
                            },
                            {
                                text: "Absolutely, I'm committed. Maybe we could also discuss some flexibility in how I complete my work?",
                                description: "Stays focused on work solutions",
                                impact: { effectiveness: +1 },
                                next: 'work_focused_solution'
                            }
                        ]
                    },
                    {
                        id: 'positive_resolution',
                        text: "The conversation ends on a positive note with concrete next steps and mutual understanding.",
                        isEnding: true,
                        outcome: 'success'
                    }
                ]
            },
            'tough-work-conversation': {
                title: 'Tough Conversation at Work',
                description: "You need to have a difficult conversation with your manager about requesting mental health accommodations while maintaining your professional reputation.",
                difficulty: 'intermediate',
                character: {
                    name: 'Sarah (Manager)',
                    avatar: '👩‍💼',
                    initialMood: 'business-focused'
                },
                scenes: [
                    {
                        id: 'intro',
                        text: "You've scheduled a private meeting with your manager Sarah. She's known for being results-driven and has seemed frustrated with some missed deadlines lately. You need to address your mental health struggles professionally.",
                        character: {
                            dialogue: "Thanks for scheduling this meeting. I wanted to discuss your recent performance. You seem distracted lately and missed a few deadlines. What's going on?",
                            mood: "concerned but slightly critical"
                        },
                        choices: [
                            {
                                text: "I appreciate you bringing this up. I've been dealing with some mental health challenges that are affecting my work, and I'd like to discuss potential accommodations.",
                                description: "Direct, professional, and solution-focused",
                                impact: { trust: +3, effectiveness: +3 },
                                next: 'professional_disclosure'
                            },
                            {
                                text: "I'm sorry about the missed deadlines. I've been overwhelmed with the workload and could use some support.",
                                description: "Focuses on workload rather than personal struggles",
                                impact: { effectiveness: +1 },
                                next: 'workload_focus'
                            },
                            {
                                text: "You're right, I haven't been at my best. I'm going through some personal stuff that's been really difficult.",
                                description: "Honest but vague about specifics",
                                impact: { trust: +1, empathy: +1 },
                                next: 'vague_personal'
                            }
                        ]
                    },
                    {
                        id: 'professional_disclosure',
                        text: "Sarah's expression shifts from critical to concerned. She sets down her pen and gives you her full attention.",
                        character: {
                            dialogue: "I appreciate you being upfront about this. Mental health is important, and I want to support you. What kind of accommodations would be helpful?",
                            mood: "supportive and engaged"
                        },
                        choices: [
                            {
                                text: "I'd benefit from a more flexible schedule and the option to work from home on particularly difficult days. I'm also working with a therapist.",
                                description: "Specific requests with professional context",
                                impact: { effectiveness: +3, trust: +2 },
                                next: 'specific_accommodations'
                            },
                            {
                                text: "Maybe we could adjust some deadlines when I'm having a rough patch? I'm still committed to doing good work.",
                                description: "Reasonable request with reassurance",
                                impact: { effectiveness: +2, trust: +1 },
                                next: 'deadline_flexibility'
                            },
                            {
                                text: "I'm not sure exactly what would help yet. I'm still figuring this out with my healthcare provider.",
                                description: "Honest about uncertainty",
                                impact: { trust: +2, effectiveness: +1 },
                                next: 'uncertain_needs'
                            }
                        ]
                    },
                    {
                        id: 'specific_accommodations',
                        text: "Sarah nods thoughtfully and makes some notes. You can see she's taking this seriously and wants to find a solution that works for everyone.",
                        character: {
                            dialogue: "Those sound like reasonable accommodations. Let me talk to HR about formalizing this. How can I better support you day-to-day?",
                            mood: "collaborative and solution-focused"
                        },
                        input_type: 'text',
                        prompt: "Sarah is being very supportive. How do you respond to show appreciation while maintaining professionalism?",
                        next: 'positive_resolution'
                    }
                ]
            },
            'asking-someone-out': {
                title: 'Asking Someone Out',
                description: "You've been getting coffee with Alex from your book club for weeks. You're interested in them romantically but nervous about potentially ruining the friendship.",
                difficulty: 'beginner',
                character: {
                    name: 'Alex',
                    avatar: '😊',
                    initialMood: 'friendly and relaxed'
                },
                scenes: [
                    {
                        id: 'intro',
                        text: "You're walking with Alex after book club, discussing the latest novel. There's been a lot of laughing and you feel a connection. You've decided today is the day to ask them out, but your heart is racing.",
                        character: {
                            dialogue: "I can't believe how badly that author botched the ending! Thanks for walking with me, by the way. These conversations always make my week better.",
                            mood: "happy and comfortable with you"
                        },
                        choices: [
                            {
                                text: "I really enjoy talking with you too. Would you like to grab dinner sometime? Like, as a date?",
                                description: "Direct and clear about romantic intentions",
                                impact: { effectiveness: +3, trust: +2 },
                                next: 'direct_approach'
                            },
                            {
                                text: "Same here! Hey, would you want to hang out outside of book club sometime? Maybe see a movie?",
                                description: "Casual approach - might be unclear about intentions",
                                impact: { effectiveness: +1, empathy: +1 },
                                next: 'casual_approach'
                            },
                            {
                                text: "You know, I've been thinking... we have such a great connection. I was wondering if you'd be interested in exploring something more than friendship?",
                                description: "Thoughtful and vulnerable approach",
                                impact: { empathy: +2, trust: +3 },
                                next: 'vulnerable_approach'
                            }
                        ]
                    },
                    {
                        id: 'direct_approach',
                        text: "Alex stops walking and turns to face you with a surprised but pleased expression. They seem to be processing what you just said.",
                        character: {
                            dialogue: "Oh! I... wow, I wasn't expecting that but I'm really flattered. I've enjoyed getting to know you too.",
                            mood: "surprised but considering it positively"
                        },
                        choices: [
                            {
                                text: "No pressure at all! I just wanted to be honest about how I feel. What do you think?",
                                description: "Gives them space to decide without pressure",
                                impact: { empathy: +3, trust: +2 },
                                next: 'no_pressure_response'
                            },
                            {
                                text: "I hope that doesn't make things weird between us. Your friendship means a lot to me either way.",
                                description: "Shows you value the relationship regardless",
                                impact: { empathy: +2, trust: +3 },
                                next: 'friendship_valued'
                            },
                            {
                                text: "I've been thinking about it for a while. I think we could be really great together.",
                                description: "Shows you've thought it through",
                                impact: { effectiveness: +2, trust: +1 },
                                next: 'thought_through'
                            }
                        ]
                    },
                    {
                        id: 'casual_approach',
                        text: "Alex smiles but seems a bit uncertain about your intentions. They're clearly interested in spending time with you but might not realize you mean it romantically.",
                        character: {
                            dialogue: "That sounds fun! I'd love to hang out more. Did you have something specific in mind?",
                            mood: "interested but unclear about romantic intent"
                        },
                        choices: [
                            {
                                text: "Actually, I should be clearer - I was thinking of it as a date. I'm interested in you romantically.",
                                description: "Clarifies your intentions directly",
                                impact: { effectiveness: +2, trust: +2 },
                                next: 'clarifying_intentions'
                            },
                            {
                                text: "Maybe dinner at that new Italian place? Just the two of us?",
                                description: "Hints at romantic interest without being explicit",
                                impact: { effectiveness: +1 },
                                next: 'subtle_hint'
                            },
                            {
                                text: "Something where we can really talk and get to know each other better, you know?",
                                description: "Still somewhat ambiguous",
                                impact: { empathy: +1 },
                                next: 'still_ambiguous'
                            }
                        ]
                    },
                    {
                        id: 'no_pressure_response',
                        text: "Alex's smile grows wider and they look relieved by your approach. They appreciate that you're being considerate of their feelings.",
                        character: {
                            dialogue: "I really appreciate how respectful you're being about this. You know what? I'd love to go on a date with you. I've been hoping you might ask.",
                            mood: "happy and relieved"
                        },
                        isEnding: true,
                        outcome: 'success'
                    },
                    {
                        id: 'friendship_valued',
                        text: "Alex looks touched by your consideration for the friendship. Even if they say no, they clearly appreciate your approach.",
                        character: {
                            dialogue: "Thank you for saying that - it means so much that you'd put our friendship first. Actually, I'd really like to try dating. I've been interested too but wasn't sure if you felt the same way.",
                            mood: "moved and happy"
                        },
                        isEnding: true,
                        outcome: 'success'
                    }
                ]
            }

            .mobile-menu-toggle {
                display: flex;
            }

            .hero-content {
                grid-template-columns: 1fr;
                text-align: center;
                gap: 3rem;
            }

            .hero-text h1 {
                font-size: 2.5rem;
            }

            .hero-subtitle {
                font-size: 1.25rem;
            }

            .section-header h2 {
                font-size: 2rem;
            }

            .solution-content {
                grid-template-columns: 1fr;
                gap: 3rem;
            }

            .stat-grid {
                grid-template-columns: 1fr;
            }

            .problem-grid {
                grid-template-columns: 1fr;
            }

            .cta-buttons {
                flex-direction: column;
                align-items: center;
            }

            .hero-buttons {
                justify-content: center;
            }

            /* Interactive scenario mobile adjustments */
            .scenarios-grid {
                grid-template-columns: 1fr;
            }

            .conversation-header {
                flex-direction: column;
                gap: 1rem;
                align-items: flex-start;
            }

            .conversation-controls {
                width: 100%;
                justify-content: center;
            }

            .scenario-stats {
                grid-template-columns: 1fr;
                gap: 1rem;
            }

            .character-info {
                flex-direction: column;
                text-align: center;
                gap: 0.5rem;
            }

            .choice-button {
                padding: 1rem;
            }

            .choice-impact {
                flex-direction: column;
                gap: 0.5rem;
            }

            .crisis-modal-content, .feedback-modal-content {
                width: 95%;
                margin: 1rem;
            }

            .crisis-header, .feedback-header {
                padding: 1rem 1.5rem;
            }

            .crisis-body, .feedback-body {
                padding: 1.5rem;
            }

            .feedback-actions {
                flex-direction: column;
                padding: 1rem 1.5rem;
            }

            .story-text {
                padding: 1.5rem;
                font-size: 1rem;
            }

            .dialogue-text {
                padding: 1rem;
                font-size: 1rem;
            }

            .text-input-box textarea {
                font-size: 1rem;
            }
        }

        @media (max-width: 480px) {
            .nav-container {
                padding: 0 1rem;
            }

            .section-container {
                padding: 0 1rem;
            }

            .hero-text h1 {
                font-size: 2rem;
            }

            .btn-primary, .btn-secondary, .btn-cta-primary, .btn-cta-secondary {
                padding: 14px 24px;
                font-size: 1rem;
            }

            .conversation-interface {
                padding: 1.5rem;
                border-radius: 16px;
            }

            .scenario-card {
                padding: 2rem;
            }

            .character-avatar {
                width: 40px;
                height: 40px;
                font-size: 1.2rem;
            }

            .choice-button {
                padding: 1rem;
                border-radius: 8px;
            }

            .choice-header {
                font-size: 0.95rem;
            }

            .choice-description {
                font-size: 0.85rem;
            }

            .choice-impact {
                font-size: 0.75rem;
            }

            .story-text {
                padding: 1rem;
                font-size: 0.95rem;
            }

            .dialogue-text {
                padding: 1rem;
                font-size: 0.95rem;
            }

            .scenario-stats {
                padding: 1rem;
            }

            .stat-item {
                font-size: 0.9rem;
            }

            .conversation-tips {
                padding: 1rem;
            }

            .progress-text {
                font-size: 0.75rem;
            }
        }

        /* Dark mode adjustments for better contrast */
        @media (prefers-color-scheme: dark) {
            .choice-button {
                border-color: var(--border-accent);
            }
            
            .story-text {
                border-left-color: var(--hbo-bright-purple);
            }
            
            .character-dialogue {
                border-color: var(--border-accent);
            }
        }

        /* High contrast mode support */
        @media (prefers-contrast: high) {
            .choice-button:hover {
                border-width: 3px;
            }
            
            .stat-fill {
                border: 1px solid currentColor;
            }
            
            .progress-fill {
                border: 1px solid var(--hbo-bright-purple);
            }
        }

        /* Reduced motion support */
        @media (prefers-reduced-motion: reduce) {
            .choice-button, .scenario-card, .story-text, .character-dialogue {
                transition: none;
            }
            
            .stat-fill, .progress-fill {
                transition: none;
            }
            
            .fade-in, .slide-in {
                animation: none;
            }
            
            @keyframes blink {
                0%, 100% { opacity: 1; }
            }
        }

        /* Accessibility */
        .sr-only {
            position: absolute;
            width: 1px;
            height: 1px;
            padding: 0;
            margin: -1px;
            overflow: hidden;
            clip: rect(0, 0, 0, 0);
            white-space: nowrap;
            border: 0;
        }

        /* Focus styles */
        button:focus, a:focus, input:focus {
            outline: 2px solid var(--hbo-bright-purple);
            outline-offset: 2px;
        }

        /* Smooth scrolling */
        html {
            scroll-behavior: smooth;
        }
    </style>
</head>
<body>
    <!-- Crisis Resources Banner -->
    <div class="crisis-banner" id="crisisBanner" role="alert" aria-live="polite">
        <strong>Crisis Support:</strong>
        <a href="tel:988" class="crisis-link">National Suicide Prevention Lifeline: 988</a>
        <a href="sms:741741" class="crisis-link">Crisis Text Line: Text HOME to 741741</a>
        <button class="close-btn" onclick="closeCrisisBanner()" aria-label="Close crisis banner" type="button">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>

    <!-- Header -->
    <header class="header" role="banner">
        <nav class="nav-container" role="navigation" aria-label="Main navigation">
            <a href="#home" class="logo" aria-label="The Rehearsal AI Homepage">The Rehearsal AI</a>
            
            <ul class="nav-links" role="menubar">
                <li role="none"><a href="#home" role="menuitem">Home</a></li>
                <li role="none"><a href="#problem" role="menuitem">The Problem</a></li>
                <li role="none"><a href="#solution" role="menuitem">Our Solution</a></li>
                <li role="none"><a href="#practice" role="menuitem">Start Practicing</a></li>
                <li role="none"><a href="#resources" role="menuitem">Resources</a></li>
            </ul>
            
            <a href="#practice" class="cta-button" role="button">Begin Rehearsal</a>
            
            <button class="mobile-menu-toggle" onclick="toggleMobileMenu()" aria-label="Toggle mobile menu" aria-expanded="false" aria-controls="mobile-menu">
                <span></span>
                <span></span>
                <span></span>
            </button>
        </nav>
    </header>

    <!-- Main Content -->
    <main id="main-content">
        <!-- Hero Section -->
        <section id="home" class="hero" role="banner">
            <div class="hero-content">
                <div class="hero-text">
                    <h1>The Rehearsal AI</h1>
                    <p class="hero-subtitle">Mental Health Conversation Practice</p>
                    <p class="hero-description">
                        A safe space to rehearse difficult conversations about mental health. 
                        Because in America, we need all the practice we can get.
                    </p>
                    
                    <div class="america-stats">
                        <h3>🇺🇸 America's Mental Health Crisis</h3>
                        <div class="stat-grid">
                            <div class="stat-item">
                                <span class="stat-number">50M</span>
                                <div class="stat-label">Adults with mental illness</div>
                            </div>
                            <div class="stat-item">
                                <span class="stat-number">60%</span>
                                <div class="stat-label">Received no treatment</div>
                            </div>
                            <div class="stat-item">
                                <span class="stat-number">76%</span>
                                <div class="stat-label">Wait 48+ days for care</div>
                            </div>
                            <div class="stat-item">
                                <span class="stat-number">$280B</span>
                                <div class="stat-label">Annual economic burden</div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="hero-buttons">
                        <a href="#practice" class="btn-primary">Start Practicing</a>
                        <a href="#problem" class="btn-secondary">Learn More</a>
                    </div>
                </div>
                
                <div class="hero-visual">
                    <div class="hero-illustration" role="img" aria-label="Mental health conversation practice illustration">
                        <div class="illustration-content">
                            <div class="main-icon">🎭</div>
                            <h3 style="color: var(--hbo-bright-purple); margin-bottom: 1rem;">Practice Makes Progress</h3>
                            <p style="color: var(--text-secondary);">Rehearse. Reflect. Improve.</p>
                            <div class="floating-elements">
                                <span>🧠</span>
                                <span>💙</span>
                                <span>💬</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Problem Statement Section -->
        <section id="problem" class="problem-section" role="region" aria-labelledby="problem-heading">
            <div class="section-container">
                <div class="section-header">
                    <h2 id="problem-heading">America's Mental Healthcare Reality</h2>
                    <p>We have a mental health crisis, but nowhere near enough resources, professionals, or accessible care. Most people don't know how to have these crucial conversations.</p>
                </div>
                
                <div class="problem-grid">
                    <div class="problem-card">
                        <span class="problem-icon">🏥</span>
                        <h3>Access Crisis</h3>
                        <p>Americans wait an average of 48 days for mental health treatment. In rural areas, some wait months or travel hundreds of miles.</p>
                        <div class="problem-stat">120M+ Americans</div>
                        <p style="font-size: 0.9rem; margin-top: 0.5rem;">live in mental health shortage areas</p>
                    </div>
                    
                    <div class="problem-card">
                        <span class="problem-icon">💰</span>
                        <h3>Cost Barrier</h3>
                        <p>Mental health care is expensive and often not covered by insurance. Many Americans simply can't afford treatment.</p>
                        <div class="problem-stat">$200+</div>
                        <p style="font-size: 0.9rem; margin-top: 0.5rem;">average cost per therapy session</p>
                    </div>
                    
                    <div class="problem-card">
                        <span class="problem-icon">🤐</span>
                        <h3>Stigma & Silence</h3>
                        <p>Cultural stigma prevents open mental health discussions. People don't know how to start these conversations or support others.</p>
                        <div class="problem-stat">76%</div>
                        <p style="font-size: 0.9rem; margin-top: 0.5rem;">feel uncomfortable discussing mental health</p>
                    </div>
                    
                    <div class="problem-card">
                        <span class="problem-icon">👨‍⚕️</span>
                        <h3>Provider Shortage</h3>
                        <p>There aren't enough mental health professionals to meet demand. The shortage is getting worse every year.</p>
                        <div class="problem-stat">6,500</div>
                        <p style="font-size: 0.9rem; margin-top: 0.5rem;">additional providers needed nationwide</p>
                    </div>
                    
                    <div class="problem-card">
                        <span class="problem-icon">⚰️</span>
                        <h3>Crisis Consequences</h3>
                        <p>Without proper support and intervention, mental health crises escalate. Suicide rates continue to climb.</p>
                        <div class="problem-stat">48,000+</div>
                        <p style="font-size: 0.9rem; margin-top: 0.5rem;">Americans die by suicide annually</p>
                    </div>
                    
                    <div class="problem-card">
                        <span class="problem-icon">🔍</span>
                        <h3>Hidden Epidemic</h3>
                        <p>Many people suffer in silence because they don't recognize symptoms or know how to seek help effectively.</p>
                        <div class="problem-stat">60%</div>
                        <p style="font-size: 0.9rem; margin-top: 0.5rem;">of adults with mental illness receive no treatment</p>
                    </div>
                </div>
            </div>
        </section>

        <!-- Solution Section -->
        <section id="solution" class="solution-section" role="region" aria-labelledby="solution-heading">
            <div class="section-container">
                <div class="solution-content">
                    <div class="solution-text">
                        <h2 id="solution-heading">Our Approach: Practice Before the Real Thing</h2>
                        <p style="color: var(--text-secondary); font-size: 1.1rem; margin-bottom: 2rem;">
                            Inspired by Nathan Fielder's meticulous preparation philosophy, we believe practicing difficult conversations can save lives and improve outcomes.
                        </p>
                        
                        <ul class="solution-features">
                            <li>Practice mental health conversations in a judgment-free environment</li>
                            <li>Learn to recognize crisis warning signs and respond appropriately</li>
                            <li>Build confidence before real-world situations</li>
                            <li>Access crisis resources and professional help immediately</li>
                            <li>Understand the limits of peer support vs. professional care</li>
                            <li>Reduce stigma through education and normalization</li>
                        </ul>
                        
                        <p style="color: var(--text-muted); font-style: italic;">
                            "The rehearsal prepares you for the performance, but more importantly, it prepares you to be genuinely helpful when someone needs it most."
                        </p>
                    </div>
                    
                    <div class="solution-visual">
                        <h3>How It Works</h3>
                        <div class="practice-flow">
                            <div class="flow-step">
                                <h4>1. Choose Your Scenario</h4>
                                <p>Select from real-world situations: checking on a friend, suggesting therapy, or crisis response</p>
                            </div>
                            <div class="flow-step">
                                <h4>2. Practice the Conversation</h4>
                                <p>Engage with AI that responds realistically, including resistance and emotional complexity</p>
                            </div>
                            <div class="flow-step">
                                <h4>3. Receive Feedback</h4>
                                <p>Get constructive guidance on your approach, empathy, and effectiveness</p>
                            </div>
                            <div class="flow-step">
                                <h4>4. Learn & Improve</h4>
                                <p>Access resources, crisis contacts, and professional referral information</p>
                            </div>
                            <div class="flow-step">
                                <h4>5. Be Prepared</h4>
                                <p>Feel confident and equipped for real conversations that could make a difference</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Conversation Rehearsal Section -->
        <section id="practice" class="rehearsal-section" role="region" aria-labelledby="rehearsal-heading">
            <div class="section-container">
                <div class="section-header">
                    <h2 id="rehearsal-heading">Choose Your Conversation to Rehearse</h2>
                    <p>Select a scenario and practice your approach. Remember, this is a safe space to learn and grow.</p>
                </div>

                <!-- Scenario Selection -->
                <div class="scenario-selection" id="scenarioSelection">
                    <div class="scenarios-grid">
                        <div class="scenario-card" data-scenario="friend-checkin" tabindex="0" role="button" aria-describedby="friend-checkin-desc">
                            <div class="scenario-icon">🫂</div>
                            <h3>Checking on a Friend</h3>
                            <p id="friend-checkin-desc">Practice reaching out to someone who seems to be struggling lately. Learn active listening and supportive responses.</p>
                            <div class="scenario-difficulty">
                                <span class="difficulty-label">Difficulty:</span>
                                <span class="difficulty-level beginner">Beginner</span>
                            </div>
                        </div>

                        <div class="scenario-card" data-scenario="therapy-suggestion" tabindex="0" role="button" aria-describedby="therapy-suggestion-desc">
                            <div class="scenario-icon">💭</div>
                            <h3>Suggesting Therapy</h3>
                            <p id="therapy-suggestion-desc">Learn how to gently suggest professional help to someone you care about while addressing their concerns.</p>
                            <div class="scenario-difficulty">
                                <span class="difficulty-label">Difficulty:</span>
                                <span class="difficulty-level intermediate">Intermediate</span>
                            </div>
                        </div>

                        <div class="scenario-card" data-scenario="workplace-mental-health" tabindex="0" role="button" aria-describedby="workplace-desc">
                            <div class="scenario-icon">💼</div>
                            <h3>Workplace Mental Health</h3>
                            <p id="workplace-desc">Navigate mental health conversations in professional settings with appropriate boundaries.</p>
                            <div class="scenario-difficulty">
                                <span class="difficulty-label">Difficulty:</span>
                                <span class="difficulty-level intermediate">Intermediate</span>
                            </div>
                        </div>

                        <div class="scenario-card" data-scenario="family-conversation" tabindex="0" role="button" aria-describedby="family-desc">
                            <div class="scenario-icon">👨‍👩‍👧‍👦</div>
                            <h3>Family Discussion</h3>
                            <p id="family-desc">Approach mental health topics with family members sensitively, considering generational differences.</p>
                            <div class="scenario-difficulty">
                                <span class="difficulty-label">Difficulty:</span>
                                <span class="difficulty-level intermediate">Intermediate</span>
                            </div>
                        </div>

                        <div class="scenario-card" data-scenario="crisis-response" tabindex="0" role="button" aria-describedby="crisis-desc">
                            <div class="scenario-icon">🚨</div>
                            <h3>Crisis Response</h3>
                            <p id="crisis-desc">Learn how to respond when someone expresses suicidal thoughts or is in immediate crisis.</p>
                            <div class="scenario-difficulty">
                                <span class="difficulty-label">Difficulty:</span>
                                <span class="difficulty-level advanced">Advanced</span>
                            </div>
                        </div>

                        <div class="scenario-card" data-scenario="self-advocacy" tabindex="0" role="button" aria-describedby="self-advocacy-desc">
                            <div class="scenario-icon">🗣️</div>
                            <h3>Self-Advocacy</h3>
                            <p id="self-advocacy-desc">Practice asking for help and communicating your own mental health needs effectively.</p>
                            <div class="scenario-difficulty">
                                <span class="difficulty-label">Difficulty:</span>
                                <span class="difficulty-level beginner">Beginner</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Conversation Interface -->
                <div class="conversation-interface" id="conversationInterface" style="display: none;">
                    <div class="conversation-header">
                        <div class="scenario-info">
                            <h3 id="currentScenarioTitle">Scenario Title</h3>
                            <p id="currentScenarioDesc">Scenario description will appear here</p>
                            <div class="progress-bar">
                                <div class="progress-fill" id="progressFill"></div>
                                <span class="progress-text" id="progressText">Scene 1 of 5</span>
                            </div>
                        </div>
                        <div class="conversation-controls">
                            <button class="btn-secondary btn-small" onclick="getHint()" type="button">💡 Get Hint</button>
                            <button class="btn-secondary btn-small" onclick="restartConversation()" type="button">🔄 Restart</button>
                            <button class="btn-secondary btn-small" onclick="endConversation()" type="button">✅ End Practice</button>
                        </div>
                    </div>

                    <div class="story-container">
                        <div class="story-text" id="storyText" role="region" aria-live="polite">
                            <!-- Story text will be populated by JavaScript -->
                        </div>
                        
                        <div class="character-dialogue" id="characterDialogue" style="display: none;">
                            <div class="character-info">
                                <div class="character-avatar" id="characterAvatar">👤</div>
                                <div class="character-details">
                                    <h4 id="characterName">Character Name</h4>
                                    <p id="characterMood">Current mood</p>
                                </div>
                            </div>
                            <div class="dialogue-text" id="dialogueText">
                                <!-- Character dialogue will appear here -->
                            </div>
                        </div>

                        <div class="choice-container" id="choiceContainer">
                            <h4>What do you do?</h4>
                            <div class="choices" id="choices">
                                <!-- Choices will be populated by JavaScript -->
                            </div>
                        </div>

                        <div class="text-input-container" id="textInputContainer" style="display: none;">
                            <h4>What do you say?</h4>
                            <div class="text-input-box">
                                <textarea id="userTextInput" placeholder="Type your response here..." rows="3"></textarea>
                                <button onclick="submitTextResponse()" class="btn-primary">Send Response</button>
                            </div>
                        </div>
                    </div>

                    <div class="scenario-stats" id="scenarioStats">
                        <div class="stat-item">
                            <span class="stat-label">Empathy</span>
                            <div class="stat-bar">
                                <div class="stat-fill empathy" id="empathyBar"></div>
                            </div>
                            <span class="stat-value" id="empathyValue">0</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-label">Trust</span>
                            <div class="stat-bar">
                                <div class="stat-fill trust" id="trustBar"></div>
                            </div>
                            <span class="stat-value" id="trustValue">0</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-label">Effectiveness</span>
                            <div class="stat-bar">
                                <div class="stat-fill effectiveness" id="effectivenessBar"></div>
                            </div>
                            <span class="stat-value" id="effectivenessValue">0</span>
                        </div>
                    </div>

                    <div class="conversation-tips" id="conversationTips">
                        <h4>💡 Current Situation</h4>
                        <p id="situationTip">Choose your approach carefully - your decisions will affect how the conversation develops.</p>
                    </div>
                </div>

                <!-- Crisis Resources Modal -->
                <div class="crisis-modal" id="crisisModal" style="display: none;" role="dialog" aria-labelledby="crisis-title" aria-hidden="true">
                    <div class="crisis-modal-content">
                        <div class="crisis-header">
                            <h3 id="crisis-title">🚨 Crisis Resources</h3>
                            <button onclick="closeCrisisModal()" class="close-btn" aria-label="Close crisis resources">&times;</button>
                        </div>
                        <div class="crisis-body">
                            <p><strong>If you or someone you know is in immediate danger, call 911.</strong></p>
                            <div class="crisis-contacts">
                                <div class="crisis-contact">
                                    <strong>National Suicide Prevention Lifeline</strong>
                                    <a href="tel:988" class="crisis-phone">988</a>
                                    <p>24/7 crisis support and suicide prevention</p>
                                </div>
                                <div class="crisis-contact">
                                    <strong>Crisis Text Line</strong>
                                    <a href="sms:741741" class="crisis-phone">Text HOME to 741741</a>
                                    <p>24/7 text-based crisis support</p>
                                </div>
                                <div class="crisis-contact">
                                    <strong>Trevor Project (LGBTQ+ Youth)</strong>
                                    <a href="tel:18664887386" class="crisis-phone">1-866-488-7386</a>
                                    <p>Crisis support for LGBTQ+ young people</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Feedback Modal -->
                <div class="feedback-modal" id="feedbackModal" style="display: none;" role="dialog" aria-labelledby="feedback-title" aria-hidden="true">
                    <div class="feedback-modal-content">
                        <div class="feedback-header">
                            <h3 id="feedback-title">📝 Conversation Feedback</h3>
                            <button onclick="closeFeedbackModal()" class="close-btn" aria-label="Close feedback">&times;</button>
                        </div>
                        <div class="feedback-body" id="feedbackContent">
                            <!-- Feedback content will be populated by JavaScript -->
                        </div>
                        <div class="feedback-actions">
                            <button onclick="restartConversation()" class="btn-primary">Try Again</button>
                            <button onclick="chooseNewScenario()" class="btn-secondary">Choose New Scenario</button>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- CTA Section -->
        <section class="cta-section" role="region" aria-labelledby="cta-heading">
            <div class="section-container">
                <div class="cta-content">
                    <h2 id="cta-heading">Ready to Make a Difference?</h2>
                    <p>
                        Start practicing today. Every conversation could save a life, 
                        improve someone's day, or help break the silence around mental health in America.
                    </p>
                    <div class="cta-buttons">
                        <a href="#practice" class="btn-cta-primary">Begin Your First Rehearsal</a>
                        <a href="#resources" class="btn-cta-secondary">View Crisis Resources</a>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer -->
    <footer class="footer" role="contentinfo">
        <div class="footer-content">
            <div class="footer-section">
                <h4>The Rehearsal AI</h4>
                <p style="color: var(--text-muted); margin-bottom: 1rem;">
                    A mental health awareness project inspired by HBO's The Rehearsal.
                </p>
                <p style="color: var(--text-muted); font-size: 0.9rem;">
                    Not affiliated with HBO or Nathan Fielder. Created for educational purposes to address America's mental health crisis.
                </p>
            </div>
            
            <div class="footer-section">
                <h4>Crisis Resources</h4>
                <ul>
                    <li><a href="tel:988">National Suicide Prevention: 988</a></li>
                    <li><a href="sms:741741">Crisis Text Line: 741741</a></li>
                    <li><a href="tel:18664887386">Trevor Project: 1-866-488-7386</a></li>
                    <li><a href="https://nami.org" target="_blank" rel="noopener">NAMI</a></li>
                    <li><a href="https://samhsa.gov" target="_blank" rel="noopener">SAMHSA</a></li>
                </ul>
            </div>
            
            <div class="footer-section">
                <h4>Resources</h4>
                <ul>
                    <li><a href="#practice">Practice Scenarios</a></li>
                    <li><a href="/mental-health-guide">Mental Health Guide</a></li>
                    <li><a href="/crisis-response">Crisis Response</a></li>
                    <li><a href="/professional-help">Find Professional Help</a></li>
                    <li><a href="/about-america">Mental Health in America</a></li>
                </ul>
            </div>
            
            <div class="footer-section">
                <h4>Legal & Contact</h4>
                <ul>
                    <li><a href="/privacy">Privacy Policy</a></li>
                    <li><a href="/terms">Terms of Service</a></li>
                    <li><a href="/medical-disclaimer">Medical Disclaimer</a></li>
                    <li><a href="mailto:hello@therehearsal.ai">Contact Us</a></li>
                    <li><a href="/feedback">Give Feedback</a></li>
                </ul>
            </div>
        </div>
        
        <div class="footer-bottom">
            <p>&copy; 2025 The Rehearsal AI. This is a tribute project for mental health awareness.</p>
            <p>If you or someone you know is in crisis, please reach out for help immediately.</p>
        </div>
    </footer>

    <!-- Scripts -->
    <script>
        // Global variables for interactive story system
        let currentScenario = null;
        let currentScene = 0;
        let scenarioData = {};
        let playerStats = { empathy: 0, trust: 0, effectiveness: 0 };
        let storyChoices = [];
        let typingInterval = null;

        // Interactive scenario definitions with branching storylines
        const interactiveScenarios = {
            'friend-checkin': {
                title: 'Checking on a Friend',
                description: "Your friend Alex hasn't been responding to texts and missed your weekly coffee date. You decide to check in.",
                difficulty: 'beginner',
                character: {
                    name: 'Alex',
                    avatar: '😔',
                    initialMood: 'withdrawn'
                },
                scenes: [
                    {
                        id: 'intro',
                        text: "You arrive at Alex's apartment. The blinds are closed and you can see dirty dishes through the window. You knock on the door and wait. After a moment, you hear shuffling footsteps.",
                        character: {
                            dialogue: "Oh... hey. I wasn't expecting anyone.",
                            mood: "surprised and slightly embarrassed"
                        },
                        choices: [
                            {
                                text: "Hey Alex! I was in the neighborhood and thought I'd stop by.",
                                description: "Casual approach - doesn't put pressure on them",
                                impact: { empathy: +1, trust: +1 },
                                next: 'casual_approach'
                            },
                            {
                                text: "I'm worried about you. You've been really hard to reach lately.",
                                description: "Direct approach - shows concern but might feel confrontational",
                                impact: { empathy: +2, trust: -1 },
                                next: 'direct_approach'
                            },
                            {
                                text: "You look terrible! What's going on?",
                                description: "Blunt approach - might make them defensive",
                                impact: { empathy: -2, trust: -2, effectiveness: -1 },
                                next: 'blunt_approach'
                            }
                        ]
                    },
                    {
                        id: 'casual_approach',
                        text: "Alex's shoulders relax slightly, but you can see the exhaustion in their eyes. They step aside to let you in, though the apartment is messier than usual.",
                        character: {
                            dialogue: "Sorry about the mess. I've just been... really busy with work stuff.",
                            mood: "slightly more comfortable but still guarded"
                        },
                        choices: [
                            {
                                text: "No worries about the mess. How are you holding up with everything?",
                                description: "Gentle inquiry that shows you care without being pushy",
                                impact: { empathy: +2, trust: +2 },
                                next: 'opening_up'
                            },
                            {
                                text: "Want me to help you clean up a bit?",
                                description: "Offers practical help but might avoid the real issue",
                                impact: { empathy: +1, effectiveness: +1 },
                                next: 'practical_help'
                            },
                            {
                                text: "Work can be overwhelming. Are you taking care of yourself?",
                                description: "Shows concern for their wellbeing",
                                impact: { empathy: +3, trust: +1 },
                                next: 'wellbeing_check'
                            }
                        ]
                    },
                    {
                        id: 'direct_approach',
                        text: "Alex's face tightens a bit. They cross their arms defensively but don't close the door.",
                        character: {
                            dialogue: "I'm fine. Just been dealing with some stuff. You don't need to worry about me.",
                            mood: "defensive but appreciates the concern"
                        },
                        choices: [
                            {
                                text: "I care about you, that's why I'm here. You don't have to deal with things alone.",
                                description: "Reassuring and supportive",
                                impact: { empathy: +3, trust: +2 },
                                next: 'breaking_down_walls'
                            },
                            {
                                text: "I can see you're struggling. What's been going on?",
                                description: "Persistent but caring inquiry",
                                impact: { empathy: +1, trust: +1 },
                                next: 'gentle_probing'
                            },
                            {
                                text: "You missed our coffee date and haven't returned my calls. That's not like you.",
                                description: "Points out specific behaviors",
                                impact: { effectiveness: +2 },
                                next: 'specific_concerns'
                            }
                        ]
                    },
                    {
                        id: 'opening_up',
                        text: "Alex sits down heavily on the couch, running their hands through their hair. For the first time, they make real eye contact with you.",
                        character: {
                            dialogue: "Honestly? I've been really struggling. I didn't want to burden anyone with my problems.",
                            mood: "vulnerable and tired"
                        },
                        input_type: 'text',
                        prompt: "Alex has opened up to you. What do you say to show you're listening and that you care?",
                        next: 'supportive_response'
                    },
                    {
                        id: 'supportive_response',
                        text: "Based on your response, Alex either feels more supported or more alone...",
                        isEnding: true,
                        evaluate_input: true
                    }
                ]
            },
            'therapy-suggestion': {
                title: 'Suggesting Therapy',
                description: "Your friend Sam has been sharing their struggles with anxiety. You think therapy could help, but they seem resistant.",
                difficulty: 'intermediate',
                character: {
                    name: 'Sam',
                    avatar: '😰',
                    initialMood: 'anxious'
                },
                scenes: [
                    {
                        id: 'intro',
                        text: "You're having coffee with Sam when they mention having another panic attack at work. They seem frustrated and exhausted.",
                        character: {
                            dialogue: "I don't know what's wrong with me. These panic attacks are getting worse, and I feel like I can't control anything anymore.",
                            mood: "frustrated and desperate"
                        },
                        choices: [
                            {
                                text: "That sounds really scary. Have you thought about talking to someone professional about this?",
                                description: "Gentle introduction to therapy",
                                impact: { empathy: +2, effectiveness: +1 },
                                next: 'therapy_intro'
                            },
                            {
                                text: "You're not broken, Sam. Anxiety is really common and very treatable.",
                                description: "Normalizes their experience",
                                impact: { empathy: +3, trust: +2 },
                                next: 'normalizing'
                            },
                            {
                                text: "Have you tried breathing exercises or meditation apps?",
                                description: "Suggests self-help options first",
                                impact: { effectiveness: +1 },
                                next: 'self_help_route'
                            }
                        ]
                    },
                    {
                        id: 'therapy_intro',
                        text: "Sam's expression becomes uncertain. They fidget with their coffee cup and look away.",
                        character: {
                            dialogue: "I don't know... therapy seems so expensive. And what if they think I'm just being dramatic?",
                            mood: "worried and insecure"
                        },
                        choices: [
                            {
                                text: "Many therapists work on sliding scales, and your insurance might cover it. You're definitely not being dramatic.",
                                description: "Addresses practical concerns and validates their feelings",
                                impact: { empathy: +2, effectiveness: +3, trust: +1 },
                                next: 'addressing_concerns'
                            },
                            {
                                text: "Your mental health is worth investing in. Think of it like going to the doctor for a physical problem.",
                                description: "Reframes therapy as healthcare",
                                impact: { effectiveness: +2, empathy: +1 },
                                next: 'healthcare_frame'
                            },
                            {
                                text: "You could try online therapy - it's often more affordable and convenient.",
                                description: "Offers alternative options",
                                impact: { effectiveness: +2 },
                                next: 'online_options'
                            }
                        ]
                    }
                ]
            },
            'crisis-response': {
                title: 'Crisis Response',
                description: "During a late-night conversation, your friend Jordan reveals they've been having thoughts of suicide.",
                difficulty: 'advanced',
                character: {
                    name: 'Jordan',
                    avatar: '😞',
                    initialMood: 'hopeless'
                },
                scenes: [
                    {
                        id: 'intro',
                        text: "It's 11 PM and Jordan calls you. Their voice sounds different - flat and distant. After talking for a few minutes, they pause and take a shaky breath.",
                        character: {
                            dialogue: "I've been thinking... maybe everyone would be better off if I just... wasn't here anymore.",
                            mood: "hopeless and scared"
                        },
                        choices: [
                            {
                                text: "Jordan, are you thinking about ending your life?",
                                description: "Direct question - research shows this doesn't increase risk",
                                impact: { effectiveness: +3, trust: +2 },
                                next: 'direct_assessment'
                            },
                            {
                                text: "That sounds like you're in a lot of pain right now. I'm really glad you called me.",
                                description: "Acknowledges their pain and shows you're available",
                                impact: { empathy: +3, trust: +3 },
                                next: 'pain_acknowledgment'
                            },
                            {
                                text: "Don't say things like that! You have so much to live for!",
                                description: "Well-intentioned but dismissive of their feelings",
                                impact: { empathy: -2, trust: -3, effectiveness: -2 },
                                next: 'dismissive_response'
                            }
                        ]
                    },
                    {
                        id: 'direct_assessment',
                        text: "There's a long pause. You can hear Jordan breathing heavily on the other end of the line.",
                        character: {
                            dialogue: "Yes... I've been thinking about it a lot lately. I have a plan.",
                            mood: "relieved to be asked directly but very distressed"
                        },
                        choices: [
                            {
                                text: "Thank you for being honest with me. Are you safe right now? Are you thinking of acting on these thoughts tonight?",
                                description: "Assesses immediate safety",
                                impact: { effectiveness: +4, trust: +2 },
                                next: 'safety_assessment'
                            },
                            {
                                text: "I'm not going to keep this secret, Jordan. We need to get you help right now.",
                                description: "Clear about getting professional help",
                                impact: { effectiveness: +3, trust: +1 },
                                next: 'getting_help'
                            }
                        ]
                    }
                ]
            }
        };

        // Initialize the interactive system
        document.addEventListener('DOMContentLoaded', function() {
            initializeScenarioSelection();
            setTimeout(showCrisisBanner, 10000);
        });

        // Scenario selection functionality
        function initializeScenarioSelection() {
            const scenarioCards = document.querySelectorAll('.scenario-card');
            
            scenarioCards.forEach(card => {
                card.addEventListener('click', function() {
                    selectScenario(this.dataset.scenario);
                });
                
                card.addEventListener('keydown', function(e) {
                    if (e.key === 'Enter' || e.key === ' ') {
                        e.preventDefault();
                        selectScenario(this.dataset.scenario);
                    }
                });
            });
        }

        function selectScenario(scenarioId) {
            // Remove previous selection
            document.querySelectorAll('.scenario-card').forEach(card => {
                card.classList.remove('selected');
                card.setAttribute('aria-checked', 'false');
            });

            // Select new scenario
            const selectedCard = document.querySelector(`[data-scenario="${scenarioId}"]`);
            selectedCard.classList.add('selected');
            selectedCard.setAttribute('aria-checked', 'true');

            currentScenario = scenarioId;
            
            if (interactiveScenarios[scenarioId]) {
                scenarioData = interactiveScenarios[scenarioId];
                setTimeout(() => {
                    if (confirm(`Begin "${scenarioData.title}"?`)) {
                        startInteractiveScenario();
                    }
                }, 500);
            } else {
                alert('This scenario is not yet available. Please choose another one.');
            }
        }

        // Interactive scenario system
        function startInteractiveScenario() {
            if (!currentScenario || !scenarioData) {
                alert('Please select a scenario first.');
                return;
            }

            // Hide scenario selection and show conversation interface
            document.getElementById('scenarioSelection').style.display = 'none';
            document.getElementById('conversationInterface').style.display = 'block';

            // Initialize scenario
            currentScene = 0;
            playerStats = { empathy: 0, trust: 0, effectiveness: 0 };
            storyChoices = [];

            // Update interface
            document.getElementById('currentScenarioTitle').textContent = scenarioData.title;
            document.getElementById('currentScenarioDesc').textContent = scenarioData.description;
            
            updateProgress();
            updateStats();
            
            // Start first scene
            displayScene(scenarioData.scenes[0]);

            // Scroll to conversation
            document.getElementById('conversationInterface').scrollIntoView({ 
                behavior: 'smooth' 
            });
        }

        function displayScene(scene) {
            // Hide all containers first
            document.getElementById('choiceContainer').style.display = 'none';
            document.getElementById('textInputContainer').style.display = 'none';
            document.getElementById('characterDialogue').style.display = 'none';

            // Display story text with typing effect
            typeText(scene.text, 'storyText', () => {
                // After story text is complete, show character dialogue if it exists
                if (scene.character && scene.character.dialogue) {
                    setTimeout(() => {
                        displayCharacterDialogue(scene.character);
                        
                        // Then show choices or text input
                        setTimeout(() => {
                            if (scene.input_type === 'text') {
                                showTextInput(scene);
                            } else if (scene.choices) {
                                displayChoices(scene.choices);
                            } else if (scene.isEnding) {
                                endScenario(scene);
                            }
                        }, 1000);
                    }, 500);
                } else {
                    // Show choices immediately if no character dialogue
                    setTimeout(() => {
                        if (scene.choices) {
                            displayChoices(scene.choices);
                        }
                    }, 500);
                }
            });

            updateSituationTip(scene);
        }

        function typeText(text, elementId, callback) {
            const element = document.getElementById(elementId);
            element.textContent = '';
            element.classList.add('typing');
            
            let index = 0;
            typingInterval = setInterval(() => {
                if (index < text.length) {
                    element.textContent += text.charAt(index);
                    index++;
                } else {
                    clearInterval(typingInterval);
                    element.classList.remove('typing');
                    if (callback) callback();
                }
            }, 30);
        }

        function displayCharacterDialogue(character) {
            const dialogueContainer = document.getElementById('characterDialogue');
            const avatar = document.getElementById('characterAvatar');
            const name = document.getElementById('characterName');
            const mood = document.getElementById('characterMood');
            const dialogue = document.getElementById('dialogueText');

            avatar.textContent = scenarioData.character.avatar;
            name.textContent = scenarioData.character.name;
            mood.textContent = character.mood;
            
            dialogueContainer.style.display = 'block';
            dialogueContainer.classList.add('fade-in');
            
            // Type the dialogue
            typeText(character.dialogue, 'dialogueText');
        }

        function displayChoices(choices) {
            const container = document.getElementById('choiceContainer');
            const choicesDiv = document.getElementById('choices');
            
            choicesDiv.innerHTML = '';
            
            choices.forEach((choice, index) => {
                const button = createChoiceButton(choice, index);
                choicesDiv.appendChild(button);
            });
            
            container.style.display = 'block';
            container.classList.add('slide-in');
        }

        function createChoiceButton(choice, index) {
            const button = document.createElement('button');
            button.className = 'choice-button';
            button.onclick = () => makeChoice(choice);
            
            const header = document.createElement('div');
            header.className = 'choice-header';
            header.textContent = choice.text;
            
            const description = document.createElement('div');
            description.className = 'choice-description';
            description.textContent = choice.description;
            
            const impact = document.createElement('div');
            impact.className = 'choice-impact';
            
            if (choice.impact) {
                Object.entries(choice.impact).forEach(([stat, value]) => {
                    const item = document.createElement('span');
                    item.className = `impact-item ${value > 0 ? 'impact-positive' : value < 0 ? 'impact-negative' : 'impact-neutral'}`;
                    item.innerHTML = `${stat.charAt(0).toUpperCase() + stat.slice(1)} ${value > 0 ? '+' : ''}${value}`;
                    impact.appendChild(item);
                });
            }
            
            button.appendChild(header);
            button.appendChild(description);
            button.appendChild(impact);
            
            return button;
        }

        function makeChoice(choice) {
            // Record the choice
            storyChoices.push(choice);
            
            // Apply stat changes
            if (choice.impact) {
                Object.entries(choice.impact).forEach(([stat, value]) => {
                    playerStats[stat] = Math.max(0, Math.min(10, playerStats[stat] + value));
                });
                updateStats();
            }
            
            // Move to next scene
            const nextScene = findScene(choice.next);
            if (nextScene) {
                currentScene++;
                updateProgress();
                setTimeout(() => displayScene(nextScene), 500);
            }
        }

        function showTextInput(scene) {
            document.getElementById('textInputContainer').style.display = 'block';
            document.getElementById('userTextInput').value = '';
            document.getElementById('userTextInput').focus();
            
            // Store the scene for later processing
            window.currentTextScene = scene;
        }

        function submitTextResponse() {
            const input = document.getElementById('userTextInput').value.trim();
            if (!input) return;
            
            const scene = window.currentTextScene;
            
            // Evaluate the text input
            const evaluation = evaluateTextResponse(input);
            
            // Apply evaluation results to stats
            Object.entries(evaluation.impact).forEach(([stat, value]) => {
                playerStats[stat] = Math.max(0, Math.min(10, playerStats[stat] + value));
            });
            updateStats();
            
            // Show feedback and continue
            showResponseFeedback(evaluation);
            
            // Continue to next scene
            const nextScene = findScene(scene.next);
            if (nextScene) {
                currentScene++;
                updateProgress();
                setTimeout(() => displayScene(nextScene), 2000);
            }
        }

        function evaluateTextResponse(input) {
            const lowerInput = input.toLowerCase();
            let impact = { empathy: 0, trust: 0, effectiveness: 0 };
            let feedback = "Your response shows care and concern.";
            
            // Check for empathetic language
            const empathyWords = ['understand', 'feel', 'sorry', 'hear', 'sounds', 'difficult', 'hard'];
            const empathyCount = empathyWords.filter(word => lowerInput.includes(word)).length;
            impact.empathy += empathyCount;
            
            // Check for supportive language
            const supportWords = ['here', 'support', 'help', 'care', 'love', 'together'];
            const supportCount = supportWords.filter(word => lowerInput.includes(word)).length;
            impact.trust += supportCount;
            
            // Check for questions
            if (input.includes('?')) {
                impact.effectiveness += 1;
            }
            
            // Check for validation
            if (lowerInput.includes('valid') || lowerInput.includes('normal') || lowerInput.includes('okay')) {
                impact.empathy += 2;
                impact.trust += 1;
            }
            
            // Generate feedback based on response quality
            const totalScore = impact.empathy + impact.trust + impact.effectiveness;
            if (totalScore >= 4) {
                feedback = "Excellent response! You showed great empathy and support.";
            } else if (totalScore >= 2) {
                feedback = "Good response. You're showing care and concern effectively.";
            } else {
                feedback = "Your response could be more supportive. Try validating their feelings.";
            }
            
            return { impact, feedback };
        }

        function showResponseFeedback(evaluation) {
            const tip = document.getElementById('situationTip');
            tip.textContent = evaluation.feedback;
            tip.parentElement.classList.add('outcome-success');
            
            setTimeout(() => {
                tip.parentElement.classList.remove('outcome-success');
            }, 2000);
        }

        function findScene(sceneId) {
            return scenarioData.scenes.find(scene => scene.id === sceneId);
        }

        function updateProgress() {
            const totalScenes = scenarioData.scenes.length;
            const progress = ((currentScene + 1) / totalScenes) * 100;
            
            document.getElementById('progressFill').style.width = `${progress}%`;
            document.getElementById('progressText').textContent = `Scene ${currentScene + 1} of ${totalScenes}`;
        }

        function updateStats() {
            Object.entries(playerStats).forEach(([stat, value]) => {
                const bar = document.getElementById(`${stat}Bar`);
                const valueSpan = document.getElementById(`${stat}Value`);
                
                if (bar && valueSpan) {
                    bar.style.width = `${(value / 10) * 100}%`;
                    valueSpan.textContent = value;
                }
            });
        }

        function updateSituationTip(scene) {
            const tips = {
                intro: "First impressions matter. Choose an approach that makes them feel safe to open up.",
                casual_approach: "You've created a comfortable atmosphere. Now listen actively.",
                direct_approach: "Being direct can work, but be prepared to show genuine care.",
                opening_up: "They're being vulnerable. Show that you're a safe person to talk to.",
                crisis_response: "This is a crisis situation. Stay calm and get professional help immediately."
            };
            
            const tip = tips[scene.id] || "Choose your response carefully - it will affect how the conversation develops.";
            document.getElementById('situationTip').textContent = tip;
        }

        function endScenario(scene) {
            // Calculate final score
            const totalScore = playerStats.empathy + playerStats.trust + playerStats.effectiveness;
            const maxScore = 30;
            const percentage = Math.round((totalScore / maxScore) * 100);
            
            // Show completion feedback
            setTimeout(() => {
                showFeedbackModal(percentage, totalScore);
            }, 1000);
        }

        // Utility functions
        function getHint() {
            const hints = [
                "Active listening involves reflecting back what you've heard",
                "Validate their emotions before offering solutions",
                "Ask open-ended questions to encourage sharing",
                "Sometimes the best response is just being present",
                "Avoid trying to 'fix' everything - focus on understanding"
            ];
            
            const randomHint = hints[Math.floor(Math.random() * hints.length)];
            document.getElementById('situationTip').textContent = `💡 ${randomHint}`;
        }

        function restartConversation() {
            if (confirm('Are you sure you want to restart this scenario?')) {
                startInteractiveScenario();
            }
        }

        function endConversation() {
            const totalScore = playerStats.empathy + playerStats.trust + playerStats.effectiveness;
            const percentage = Math.round((totalScore / 30) * 100);
            showFeedbackModal(percentage, totalScore);
        }

        function chooseNewScenario() {
            // Reset everything
            currentScenario = null;
            currentScene = 0;
            scenarioData = {};
            playerStats = { empathy: 0, trust: 0, effectiveness: 0 };
            storyChoices = [];
            
            // Hide conversation interface and show scenario selection
            document.getElementById('conversationInterface').style.display = 'none';
            document.getElementById('scenarioSelection').style.display = 'block';
            
            // Remove all selections
            document.querySelectorAll('.scenario-card').forEach(card => {
                card.classList.remove('selected');
                card.setAttribute('aria-checked', 'false');
            });
            
            closeFeedbackModal();
            
            // Scroll back to scenarios
            document.getElementById('practice').scrollIntoView({ behavior: 'smooth' });
        }

        // Modal functions
        function showFeedbackModal(percentage, totalScore) {
            const feedbackContent = document.getElementById('feedbackContent');
            
            let grade, message;
            if (percentage >= 80) {
                grade = "A";
                message = "Outstanding! You demonstrated excellent empathy and communication skills.";
            } else if (percentage >= 60) {
                grade = "B";
                message = "Well done! You showed good understanding and support.";
            } else if (percentage >= 40) {
                grade = "C";
                message = "Not bad, but there's room to improve your empathy and listening skills.";
            } else {
                grade = "D";
                message = "This is challenging! Consider practicing more active listening techniques.";
            }
            
            feedbackContent.innerHTML = `
                <div class="feedback-score">
                    <h4>Grade: ${grade} (${percentage}%)</h4>
                    <p>${message}</p>
                </div>
                <div class="feedback-areas">
                    <div class="feedback-area">
                        <h5>Empathy: ${playerStats.empathy}/10</h5>
                        <p>${playerStats.empathy >= 7 ? 'Excellent emotional understanding!' : 'Try to show more understanding of their feelings.'}</p>
                    </div>
                    <div class="feedback-area">
                        <h5>Trust Building: ${playerStats.trust}/10</h5>
                        <p>${playerStats.trust >= 7 ? 'Great at making them feel safe!' : 'Focus on creating a more supportive environment.'}</p>
                    </div>
                    <div class="feedback-area">
                        <h5>Effectiveness: ${playerStats.effectiveness}/10</h5>
                        <p>${playerStats.effectiveness >= 7 ? 'Your approach was very effective!' : 'Consider different communication strategies.'}</p>
                    </div>
                </div>
            `;
            
            document.getElementById('feedbackModal').style.display = 'flex';
        }

        function closeFeedbackModal() {
            document.getElementById('feedbackModal').style.display = 'none';
        }

        function showCrisisBanner() {
            document.getElementById('crisisBanner').classList.add('show');
        }

        function closeCrisisBanner() {
            document.getElementById('crisisBanner').classList.remove('show');
        }

        function showCrisisModal() {
            document.getElementById('crisisModal').style.display = 'flex';
        }

        function closeCrisisModal() {
            document.getElementById('crisisModal').style.display = 'none';
        }

        // Navigation and other utility functions
        function toggleMobileMenu() {
            console.log('Mobile menu toggle - to be implemented');
        }

        // Smooth scrolling and other event listeners
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('a[href^="#"]').forEach(anchor => {
                anchor.addEventListener('click', function (e) {
                    e.preventDefault();
                    const target = document.querySelector(this.getAttribute('href'));
                    if (target) {
                        target.scrollIntoView({
                            behavior: 'smooth',
                            block: 'start'
                        });
                    }
                });
            });

            // Header background change on scroll
            window.addEventListener('scroll', function() {
                const header = document.querySelector('.header');
                if (window.scrollY > 50) {
                    header.style.background = 'rgba(28, 28, 30, 0.98)';
                } else {
                    header.style.background = 'rgba(28, 28, 30, 0.95)';
                }
            });

            // Add enter key support for text input
            const textInput = document.getElementById('userTextInput');
            if (textInput) {
                textInput.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter' && !e.shiftKey) {
                        e.preventDefault();
                        submitTextResponse();
                    }
                });
            }
        });

        // Accessibility improvements
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeCrisisBanner();
                closeCrisisModal();
                closeFeedbackModal();
            }
        });
    </script>
</body>
</html>
        </style>
    </head>
    <body>
        <header class="header">
            <div class="logo">The Rehearsal</div>
            <nav class="nav">
                <a href="#practice" class="nav-link">Practice</a>
                <a href="#resources" class="nav-link">Resources</a>
                <a href="#about" class="nav-link">About</a>
                <button class="mobile-menu-toggle" onclick="toggleMobileMenu()">☰</button>
            </nav>
        </header>

        <main id="practice">
            <section id="scenarioSelection" class="scenario-selection">
                <h2>Select a Scenario</h2>
                <div class="scenario-cards">
                    <!-- Scenario cards will be dynamically generated here -->
                    <div class="scenario-card" data-scenario="active-listening">
                        <h3>Active Listening</h3>
                        <p>Practice your active listening skills with a friend in need.</p>
                    </div>
                    <div class="scenario-card" data-scenario="therapy-suggestion">
                        <h3>Suggesting Therapy</h3>
                        <p>Learn how to suggest therapy to a friend struggling with anxiety.</p>
                    </div>
                    <div class="scenario-card" data-scenario="crisis-response">
                        <h3>Crisis Response</h3>
                        <p>Respond to a friend in crisis with empathy and care.</p>
                    </div>
                </div>
            </section>

            <section id="conversationInterface" class="conversation-interface">
                <h2 id="currentScenarioTitle"></h2>
                <p id="currentScenarioDesc"></p>

                <!-- Progress bar -->
                <div class="progress-bar">
                    <div id="progressFill" class="progress-fill"></div>
                    <span id="progressText"></span>
                </div>

                <!-- Character dialogue -->
                <div id="characterDialogue" class="character-dialogue">
                    <span id="characterAvatar"></span>
                    <span id="characterName"></span>:
                    <span id="characterMood"></span><br/>
                    <span id="dialogueText"></span>
                </div>

                <!-- Story text -->
                <div id="storyText" class="story-text"></div>

                <!-- Choice container -->
                <div id="choiceContainer" class="choice-container">
                    <div id="choices" class="choices"></div>
                </div>